{
  erl_opts,
  [
    warnings_as_errors,
    debug_info,
    {i, "/home/steven/zomp/lib/otpr/zx/0.13.4/include/"}
  ]
}.

{
  deps,
  [
    {
      ejsonpath,
      {
        git,
        "https://github.com/ostrovok-team/ejsonpath.git",
        {branch, "master"}
      }
    },
    {
      egherkin,
      {git, "https://github.com/jagguli/egherkin.git", {branch, "master"}}
    },
    {
      mustache,
      {git, "https://github.com/mojombo/mustache.erl.git", {branch, "master"}}
    },
    {
      fast_yaml,
      {git, "https://github.com/processone/fast_yaml.git", {branch, "master"}}
    },
    cowboy,
    {
      datestring,
      {git, "https://github.com/strange/datestring.git", {branch, "master"}}
    },
    {
      uuid,
      ".*",
      {git, "https://github.com/avtobiff/erlang-uuid.git", {branch, "master"}}
    },
    {pa, ".*", {git, "https://github.com/erszcz/pa.git", {branch, "master"}}},
    {
      poolboy,
      ".*",
      {git, "https://github.com/devinus/poolboy.git", {branch, "master"}}
    },
    {
      docopt,
      ".*",
      {git, "https://github.com/plux/docopt-erl.git", {branch, "master"}}
    },
    {
      date_util,
      {git, "https://github.com/jagguli/date_util.git", {branch, "master"}}
    },
    {
      riakc,
      {
        git,
        "https://github.com/jagguli/riak-erlang-client.git",
        {branch, "master"}
      }
    },
    {
      datestring,
      {git, "https://github.com/strange/datestring.git", {branch, "master"}}
    },
    {gun, "2.0.0"},
    recon,
    {
      throttle,
      {git, "https://github.com/lambdaclass/throttle.git", {tag, "0.3.0"}}
    },
    jsx,
    erlcron,
    erlexec,
    {
      base58,
      {git, "https://github.com/aeternity/erl-base58.git", {branch, "master"}}
    },
    {ipfs, {git, "https://github.com/octaspace/ipfs.git", {branch, "master"}}},
    gen_smtp,
    certifi,
    {opentelemetry_cowboy, "~> 0.2"},
    stdout_formatter,
    {
      color,
      {git, "https://github.com/jagguli/erlang-color.git", {branch, "master"}}
    },
    {
    webdrv,
        {git, "https://github.com/jagguli/webdrv.git", {branch, "master"}}
    },
    prometheus_cowboy
  ]
}.

{
  plugins,
  [
    rebar3_hex,
    rebar3_auto,
    steamroller,
    pc,
    {
      rebar3_dialyzer_html,
      {
        git,
        "https://github.com/srijan/rebar3_dialyzer_html.git",
        {branch, "main"}
      }
    }
  ]
}.

{dialyzer, [{output_format, raw}, {warnings, [no_unknown]}]}.

{
  shell,
  [
    {erl_opts, [debug_info]},
    {config, "config/sys.config"},
    {
      apps,
      [
        kernel,
        stdlib,
        public_key,
        ssl,
        os_mon,
        crypto,
        cowboy,
        gun,
        erlcron,
        erlexec,
        prometheus_cowboy,
        cedb,
        damage
      ]
    },
    {
      src_dirs,
      ["src", "test", "test/handlers", "vanillae/src", "vanillae/ebin"]
    }
  ]
}.

{ct_compile_opts, [export_all]}.

{
  profiles,
  [
    {prod, [{erl_opts, [no_debug_info, warnings_as_errors]}]},
    {native, [{erl_opts, [{native, {hipe, o3}}, {d, 'NATIVE'}]}]},
    {
      test,
      [
        {erl_opts, [debug_info]},
        {
          src_dirs,
          ["src", "test", "test/handlers", "vanillae/src", "vanillae/ebin"]
        },
        {
          deps,
          [
            {
              ct_helper,
              ".*",
              {git, "https://github.com/ninenines/ct_helper.git"}
            },
            {ranch, ".*", {git, "https://github.com/ninenines/ranch.git"}}
          ]
        },
        {kernel, [{error_logger, {file, "test.log"}}]},
        {ct_hooks, cowboy_ct_hook},
        {ct_opts, [{sys_config, "config/sys.config"}]}
      ]
    }
  ]
}.

{
  relx,
  [
    {
      release,
      {damage, git},
      [
        kernel,
        stdlib,
        sasl,
        public_key,
        ssl,
        os_mon,
        crypto,
        inets,
        cowboy,
        jsx,
        prometheus_cowboy,
        datestring,
        date_util,
        poolboy,
        gun,
        erlcron,
        damage
      ]
    },
    {dev_mode, false},
    {include_erts, true},
    {extended_start_script, true}
  ]
}.

{
  steamroller,
  [
    {line_length, 80},
    {indent, 2},
    {
      inputs,
      [
        "config/*.config",
        "rebar.config",
        "{src,test,include}/**/*.{[he]rl,app.src}"
      ]
    }
  ]
}.
